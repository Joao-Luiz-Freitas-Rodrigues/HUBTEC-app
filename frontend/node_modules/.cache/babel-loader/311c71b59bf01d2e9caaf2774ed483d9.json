{"ast":null,"code":"import { takeLatest, put, call } from 'redux-saga/effects';\nimport axios from 'axios'; //CONJUNTO DE FUNÇÕES PARA VALIDAÇÃO DE USUÁRIO\n\nfunction getUser(user) {\n  return axios({\n    method: 'POST',\n    url: 'http://localhost:3001/authenticate',\n    data: {\n      email: user.email,\n      password: user.password\n    }\n  });\n}\n\nfunction* asyncLogIn(action) {\n  try {\n    yield call(getUser, action.payload);\n    yield put({\n      type: 'LOG_IN',\n      payload: true\n    });\n  } catch (e) {\n    const message = e.response.data.error;\n    yield put({\n      type: 'ERRO_LOGIN',\n      payload: message\n    });\n    yield put({\n      type: 'CLEAR_MESSAGE'\n    });\n  }\n}\n\nexport default function* root() {\n  yield takeLatest('ASYNC_LOG_IN', asyncLogIn);\n}","map":{"version":3,"sources":["/Users/mac/Documents/workspace/react/frontend/src/store/sagas.js"],"names":["takeLatest","put","call","axios","getUser","user","method","url","data","email","password","asyncLogIn","action","payload","type","e","message","response","error","root"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAIA;;AACA,SAASC,OAAT,CAAiBC,IAAjB,EAAsB;AAElB,SAAOF,KAAK,CAAC;AACTG,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAC,oCAFK;AAGTC,IAAAA,IAAI,EAAC;AACDC,MAAAA,KAAK,EAACJ,IAAI,CAACI,KADV;AAEDC,MAAAA,QAAQ,EAAEL,IAAI,CAACK;AAFd;AAHI,GAAD,CAAZ;AAQH;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA4B;AAExB,MAAG;AACC,UAAMV,IAAI,CAACE,OAAD,EAAUQ,MAAM,CAACC,OAAjB,CAAV;AAEA,UAAMZ,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAE,QAAR;AAAkBD,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAAT;AAEH,GALD,CAKE,OAAME,CAAN,EAAQ;AACN,UAAMC,OAAO,GAAGD,CAAC,CAACE,QAAF,CAAWT,IAAX,CAAgBU,KAAhC;AACA,UAAMjB,GAAG,CAAC;AAACa,MAAAA,IAAI,EAAC,YAAN;AAAoBD,MAAAA,OAAO,EAAEG;AAA7B,KAAD,CAAT;AACA,UAAMf,GAAG,CAAC;AAACa,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAT;AACH;AAGJ;;AAED,eAAe,UAAUK,IAAV,GAAgB;AAE3B,QAAMnB,UAAU,CAAC,cAAD,EAAiBW,UAAjB,CAAhB;AAEH","sourcesContent":["import { takeLatest, put, call } from 'redux-saga/effects'; \nimport axios from 'axios';\n\n\n\n//CONJUNTO DE FUNÇÕES PARA VALIDAÇÃO DE USUÁRIO\nfunction getUser(user){\n    \n    return axios({\n        method: 'POST',\n        url:'http://localhost:3001/authenticate',\n        data:{\n            email:user.email,\n            password: user.password\n        }\n    })\n}\n\nfunction* asyncLogIn(action){\n\n    try{\n        yield call(getUser, action.payload);        \n\n        yield put({ type: 'LOG_IN', payload: true});\n        \n    } catch(e){\n        const message = e.response.data.error;\n        yield put({type:'ERRO_LOGIN', payload: message});\n        yield put({type:'CLEAR_MESSAGE'});\n    }\n    \n    \n}\n\nexport default function* root(){ \n    \n    yield takeLatest('ASYNC_LOG_IN', asyncLogIn)\n    \n}\n"]},"metadata":{},"sourceType":"module"}