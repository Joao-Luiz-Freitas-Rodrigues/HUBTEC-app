{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/workspace/react/frontend/src/pages/Login/index.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as AuthActions from '../../actions/Auth';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './styles.css';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.notify = () => {\n      toast(\"\".concat(this.props.message), {\n        className: \"toast\",\n        progressClassName: \"toast_progress\",\n        bodyClassName: \"body_toast\"\n      });\n    };\n  }\n\n  logIn() {\n    this.props.log_in(this.state.email, this.state.password);\n\n    if (this.props.message !== \"\") {\n      this.notify();\n    }\n  }\n\n  renderToast() {\n    if (this.props.message !== \"\") {\n      this.notify();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container_login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.renderToast(), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"HUB\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"tasks\")), React.createElement(\"div\", {\n      className: \"container_inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"input\",\n      value: this.state.email,\n      label: \"Login\",\n      onChange: email => this.setState({\n        email: email.target.value\n      }),\n      onKeyPress: e => {\n        if (e.key === 'Enter') {\n          this.logIn();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"input\",\n      value: this.state.password,\n      onChange: password => this.setState({\n        password: password.target.value\n      }),\n      label: \"Password\",\n      onKeyPress: e => {\n        if (e.key === 'Enter') {\n          this.logIn();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.logIn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Sign IN\"), React.createElement(ToastContainer, {\n      autoClose: 3000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLogged: state.Auth.isLogged,\n  message: state.Auth.message\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(AuthActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/mac/Documents/workspace/react/frontend/src/pages/Login/index.js"],"names":["React","Component","TextField","bindActionCreators","connect","AuthActions","ToastContainer","toast","Login","state","email","password","notify","props","message","className","progressClassName","bodyClassName","logIn","log_in","renderToast","render","setState","target","value","e","key","mapStateToProps","isLogged","Auth","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AAEA,OAAO,cAAP;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE5BQ,KAF4B,GAEtB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFsB;;AAAA,SAO5BC,MAP4B,GAOnB,MAAM;AACbL,MAAAA,KAAK,WAAI,KAAKM,KAAL,CAAWC,OAAf,GAA0B;AAC7BC,QAAAA,SAAS,EAAC,OADmB;AAE7BC,QAAAA,iBAAiB,EAAC,gBAFW;AAG7BC,QAAAA,aAAa,EAAE;AAHc,OAA1B,CAAL;AAOD,KAf2B;AAAA;;AAiB5BC,EAAAA,KAAK,GAAE;AACL,SAAKL,KAAL,CAAWM,MAAX,CAAkB,KAAKV,KAAL,CAAWC,KAA7B,EAAoC,KAAKD,KAAL,CAAWE,QAA/C;;AACA,QAAG,KAAKE,KAAL,CAAWC,OAAX,KAAuB,EAA1B,EAA6B;AAC3B,WAAKF,MAAL;AAED;AACF;;AAEDQ,EAAAA,WAAW,GAAE;AACX,QAAG,KAAKP,KAAL,CAAWC,OAAX,KAAuB,EAA1B,EAA6B;AAC3B,WAAKF,MAAL;AAED;AACF;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,WAAL,EADH,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAN,CAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,KAFpB;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,QAAQ,EAAEA,KAAK,IAAI,KAAKY,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAACA,KAAK,CAACa,MAAN,CAAaC;AAApB,OAAd,CAJrB;AAKE,MAAA,UAAU,EAAEC,CAAC,IAAI;AACf,YAAGA,CAAC,CAACC,GAAF,KAAU,OAAb,EAAqB;AACnB,eAAKR,KAAL;AACD;AACF,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAaE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,QAFpB;AAGE,MAAA,QAAQ,EAAEA,QAAQ,IAAI,KAAKW,QAAL,CAAc;AAACX,QAAAA,QAAQ,EAACA,QAAQ,CAACY,MAAT,CAAgBC;AAA1B,OAAd,CAHxB;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,UAAU,EAAEC,CAAC,IAAI;AACf,YAAGA,CAAC,CAACC,GAAF,KAAU,OAAb,EAAqB;AACnB,eAAKR,KAAL;AACD;AACF,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAyBE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,KAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAzBF,EA0BE,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,CAHJ,CADJ;AAmCD;;AApE2B;;AAwE9B,MAAMS,eAAe,GAAGlB,KAAK,KAAK;AAChCmB,EAAAA,QAAQ,EAAEnB,KAAK,CAACoB,IAAN,CAAWD,QADW;AAEhCd,EAAAA,OAAO,EAAEL,KAAK,CAACoB,IAAN,CAAWf;AAFY,CAAL,CAA7B;;AAKA,MAAOgB,kBAAkB,GAAGC,QAAQ,IAClC5B,kBAAkB,CAACE,WAAD,EAAc0B,QAAd,CADpB;;AAGA,eAAe3B,OAAO,CAACuB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as AuthActions from '../../actions/Auth';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './styles.css';\n\nclass Login extends Component {\n\n  state={\n    email: \"\",\n    password: \"\"\n  }\n\n  notify = () => {\n    toast(`${this.props.message}`, {\n      className:\"toast\",\n      progressClassName:\"toast_progress\",\n      bodyClassName: \"body_toast\",\n\n    });\n   \n  }\n\n  logIn(){\n    this.props.log_in(this.state.email, this.state.password);\n    if(this.props.message !== \"\"){\n      this.notify();\n\n    }\n  }\n\n  renderToast(){\n    if(this.props.message !== \"\"){\n      this.notify();\n\n    }\n  }\n\n  render() {\n    return(\n        <div className=\"container_login\">\n          {this.renderToast()}\n            <p>HUB<span>tasks</span></p>\n            <div className=\"container_inputs\">\n              \n              <TextField \n                id=\"input\" \n                value={this.state.email}\n                label=\"Login\" \n                onChange={email => this.setState({email:email.target.value})}\n                onKeyPress={e => {\n                  if(e.key === 'Enter'){\n                    this.logIn();\n                  }\n                }}\n              />\n              <TextField \n                id=\"input\" \n                value={this.state.password}\n                onChange={password => this.setState({password:password.target.value})}\n                label=\"Password\" \n                onKeyPress={e => {\n                  if(e.key === 'Enter'){\n                    this.logIn();\n                  }\n                }}\n              />\n\n              <button onClick={() => this.logIn()}>Sign IN</button>\n              <ToastContainer autoClose={3000} />\n            </div>\n            \n        </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  isLogged: state.Auth.isLogged,  \n  message: state.Auth.message\n});\n\nconst  mapDispatchToProps = dispatch =>\n  bindActionCreators(AuthActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}